pro ccdproc_xtalk,im,head,chip,xstr,verbose=verbose

; Apply cross-talk correction
; im    The raw chip image, will be updated
; head  The chip header, will be updated
; chip  The chip extension number
; xstr  The XTALK structure

im0 = im
victim = strtrim(chip,2)+['A','B']

; Victim loop
for j=0,1 do begin    
  len = strlen(victim[j])
  victim_amp = strmid(victim[j],len-1,1)
  victim_chip = long(strmid(victim[j],0,len-1))
  vdatasec = dcm_splitsec(sxpar(head,'DATASEC'+victim_amp))-1
  vampsec = dcm_splitsec(sxpar(head,'AMPSEC'+victim_amp))-1
  vim = im0[vdatasec[0]:vdatasec[1],vdatasec[2]:vdatasec[3]]
  ; Put victim in READ order
  if vampsec[0] gt vampsec[1] then vim=reverse(vim,1)
  if vampsec[2] gt vampsec[3] then vim=reverse(vim,2)

  ; Source loop
  ind = where(xstr.victim eq victim[j],nind)
  xtalkhead = ''
  for k=0,nind-1 do begin
    ; Read in chip info
    if xstr[ind[k]].source_chip ne victim_chip then begin
      FITS_READ,file,srcim,srchead,exten=xstr[ind[k]].source_chip,/no_pdu,/no_abort
    endif else begin
      srcim = im0 & srchead=head  ; this chip
    endelse
    sdatasec = dcm_splitsec(sxpar(srchead,'DATASEC'+xstr[ind[k]].source_amp))-1
    sampsec = dcm_splitsec(sxpar(srchead,'AMPSEC'+xstr[ind[k]].source_amp))-1
    sim = srcim[sdatasec[0]:sdatasec[1],sdatasec[2]:sdatasec[3]]
    ; Put source in READ order
    if sampsec[0] gt sampsec[1] then sim=reverse(sim,1)
    if sampsec[2] gt sampsec[3] then sim=reverse(sim,2)
    ; Scale and round to integers
    sim_scale = round(sim*xstr[ind[k]].scale)
    ; Subtract and make sure it's non-negative
    vim = (vim-sim_scale) > 0
    if xtalkhead eq '' then prefix='' else prefix='+'
    xtalkhead += prefix+strtrim(string(xstr[ind[k]].scale,format='(G12.3)'),2)+'*'+xstr[ind[k]].source
  endfor
  if xtalkhead eq '' then xtalkhead='No crosstalk correction'
  sxaddpar,head,'XTALKCR'+victim_amp,xtalkhead
  if keyword_set(verbose) then print,victim[j],' ',xtalkhead

  ; Put victim back in original order
  if vampsec[0] gt vampsec[1] then vim=reverse(vim,1)
  if vampsec[2] gt vampsec[3] then vim=reverse(vim,2)

  ; Stuff it back in the original image
  im[vdatasec[0]:vdatasec[1],vdatasec[2]:vdatasec[3]] = vim

endfor ; victim loop

;stop

end
